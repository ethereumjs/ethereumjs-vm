name: VM
on:
  push:
    branches:
      - master
    tags:
      - '*'

env:
  cwd: ${{github.workspace}}/packages/vm

defaults:
  run:
    working-directory: packages/vm

jobs:
  test-vm-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Dependency cache
        uses: actions/cache@v2
        id: cache
        with:
          key: cache-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          path: '**/node_modules'

      - run: yarn
        working-directory: ${{github.workspace}}

      # Builds current package and the ones it depends from.
      - run: yarn run build:vm
        working-directory: ${{github.workspace}}

      - run: yarn run coverage
      
      - uses: codecov/codecov-action@v1
        with:
          file: ${{ env.cwd }}/coverage/lcov.info
          flags: vm

      - run: yarn run test:API
      - run: yarn run test:API:browser
      - run: yarn run lint
  
  test-vm-state:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Dependency cache
        uses: actions/cache@v2
        id: cache
        with:
          key: cache-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          path: '**/node_modules'

      - run: yarn
        working-directory: ${{github.workspace}}

      # Builds current package and the ones it depends from.
      - run: yarn run build:vm
        working-directory: ${{github.workspace}}

      - run: yarn run test:state:selectedForks

  test-vm-blockchain:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Dependency cache
        uses: actions/cache@v2
        id: cache
        with:
          key: cache-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          path: '**/node_modules'

      - run: yarn
        working-directory: ${{github.workspace}}

      # Builds current package and the ones it depends from.
      - run: yarn run build:vm
        working-directory: ${{github.workspace}}

      - run: yarn run test:blockchain

  vm-benchmarks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Dependency cache
        uses: actions/cache@v2
        id: cache
        with:
          key: cache-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          path: '**/node_modules'

      - run: yarn
        working-directory: ${{github.workspace}}

      # Builds current package and the ones it depends from.
      - run: yarn run build:vm
        working-directory: ${{github.workspace}}

      - run: yarn run build:benchmarks
        working-directory: ${{ env.cwd }}

      - run: yarn run benchmarks -- 10 | tee output.txt
        working-directory: ${{ env.cwd }}

      # Run git stash in case github-action-benchmark has trouble switching to gh-pages branch due to differing lock files
      - run: git stash

      - name: Compare benchmarks
        uses: rhysd/github-action-benchmark@v1
        if: github.ref == 'refs/heads/master'
        with:
          tool: 'benchmarkjs'
          # Where the output from the benchmark tool is stored
          output-file-path: ${{ env.cwd }}/output.txt
          # Enable alert commit comment (default alert threshold: 200%)
          comment-on-alert: true
          # GitHub API token to make a commit comment
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Push and deploy to GitHub pages branch automatically (if on master)
          auto-push: 'true'
          # Only keep and display the last 30 commits worth of benchmark data
          max-items-in-chart: 30

      # Re-apply git stash to prepare for saving back to cache.
      # Avoids exit code 1 by checking if there are changes to be stashed first
      - run: STASH_LIST=`git stash list` && [ ! -z $STASH_LIST ] && git stash apply || echo "No files to stash-apply. Skippingâ€¦"
